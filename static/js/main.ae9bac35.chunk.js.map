{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","components/FeedbackOptions/FeedbackOptions.js","App.js","reportWebVitals.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","statistics","stat_list","stat_list_item","Section","title","children","Notification","message","FeedbackOptions","options","feedbackState","feedbackOptions","map","option","type","name","onClick","shortid","generate","App","state","e","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","result","percentage","Math","round","this","objKey","Object","keys","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oJACAA,EAAOC,QAAU,CAAC,WAAa,+BAA+B,UAAY,8BAA8B,eAAiB,qC,oKC0C1GC,EAvCI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACf,qBAAKC,UAAWC,IAAOC,WAAvB,SAEI,qBAAIF,UAAWC,IAAOE,UAAtB,UAEF,6BACE,uBAAMH,UAAWC,IAAOG,eAAxB,kBAA8CT,OAGhD,6BACU,uBAAMK,UAAWC,IAAOG,eAAxB,qBAAiDR,OAG3D,6BACU,uBAAMI,UAAWC,IAAOG,eAAxB,iBAA6CP,OAGvD,6BACU,uBAAMG,UAAWC,IAAOG,eAAxB,mBAA+CN,OAGzD,6BACU,uBAAME,UAAWC,IAAOG,eAAxB,gCAA4DL,aCT7DM,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACzB,OACC,qCACC,6BAAKD,IACJC,MCMWC,EAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvB,OACC,mCACC,4BAAIA,O,iCCwBQC,EAxBS,SAAC,GAEtB,IAFwBC,EAEzB,EAFyBA,QAASC,EAElC,EAFkCA,cAGnC,OAEA,qBAAKZ,UAAWC,IAAOY,gBAAvB,SACGF,EAAQG,KAAI,SAACC,GAAD,OACZ,wBAAiCC,KAAK,SAASC,KAAMF,EAAQf,UAAU,kBAAkBkB,QAASN,EAAlG,SACEG,GADWI,IAAQC,kBCJJC,G,kNACpBC,MAAQ,CACP3B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGLe,cAAgB,SAACW,GACjB,IAAMN,EAAOM,EAAEC,OAAOP,KACtB,EAAKQ,UAAS,SAACC,GAAD,sBACZT,EAAOS,EAAUT,GAAQ,O,EAG3BU,mBAAqB,WACrB,MAA+B,EAAKL,MAEpC,OAFA,EAAQ3B,KAAR,EAAcC,QAAd,EAAuBC,K,EAKxB+B,gCAAkC,WACjC,IAAMC,EAAS,EAAKF,qBAEdG,EAAqB,IADV,EAAKR,MAAd3B,KAC0BkC,EAClC,OAAOE,KAAKC,MAAMF,I,4CAGlB,WACE,MAA+BG,KAAKX,MAA5B3B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACnBC,EAAQmC,KAAKN,qBACb5B,EAAqBkC,KAAKL,kCAC1BM,EAASC,OAAOC,KAAKH,KAAKX,OAC9B,OACE,qCACE,cAAC,EAAD,CAAShB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEK,QAASuB,EACTtB,cAAeqB,KAAKrB,kBAGb,IAAVd,EACC,cAAC,EAAD,CAAcW,QAAQ,sBAEtB,cAAC,EAAD,CAASH,MAAM,aAAf,SACE,cAAC,EAAD,CACEX,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GAhDDsC,cCGlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfA9C,EAAOC,QAAU,CAAC,gBAAkB,yCAAyC,gBAAkB,4C","file":"static/js/main.ae9bac35.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2SZOF\",\"stat_list\":\"Statistics_stat_list__U_zPy\",\"stat_list_item\":\"Statistics_stat_list_item__29Hmg\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n    <div className={styles.statistics}>\r\n\r\n        <ul className={styles.stat_list}>\r\n            \r\n      <li>\r\n        <span className={styles.stat_list_item}>Good:{good}</span>\r\n            </li>\r\n\r\n      <li>\r\n                <span className={styles.stat_list_item}>Neutral:{neutral}</span>\r\n            </li>\r\n            \r\n      <li>\r\n                <span className={styles.stat_list_item}>Bad:{bad}</span>\r\n            </li>\r\n            \r\n      <li>\r\n                <span className={styles.stat_list_item}>Total:{total}</span>\r\n            </li>\r\n\r\n      <li>\r\n                <span className={styles.stat_list_item}>PositivePercentage:{positivePercentage}</span>\r\n            </li>\r\n   \r\n    </ul>   \r\n\r\n    </div>\r\n);\r\n\r\nStatistics.propTypes = {\r\n\tgood: PropTypes.number.isRequired,\r\n\tneutral: PropTypes.number.isRequired,\r\n\tbad: PropTypes.number.isRequired,\r\n\ttotal: PropTypes.number.isRequired,\r\n\tpositivePercentage: PropTypes.number.isRequired\r\n};\r\n\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>{title}</h2>\r\n\t\t\t{children}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nSection.propTypes = {\r\n\ttitle: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<p>{message}</p>\r\n\t\t</>\r\n\t);\r\n};\r\nNotification.propTypes = {\r\n\tmessage: PropTypes.string.isRequired\r\n};\r\nexport default Notification;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\nimport shortid from 'shortid';\r\n\r\n\r\nconst FeedbackOptions = ({ options, feedbackState }) => \r\n\t\r\n\t\t{\r\n\treturn (\r\n\t\r\n\t<div className={styles.feedbackOptions}>\r\n\t\t\t{options.map((option) => (\r\n\t\t\t\t<button key={shortid.generate()} type=\"button\" name={option} className=\"button_Feedback\" onClick={feedbackState}>\r\n\t\t\t\t\t{option}\r\n\t\t\t\t</button>\r\n\t\t\t))}\r\n   </div >\r\n);\r\n\r\n\t\r\n}\r\n\t\r\n\r\n\t\r\nFeedbackOptions.propTypes = {\r\n\toptions: PropTypes.array.isRequired,\r\n\tfeedbackState: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FeedbackOptions;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // class FeedbackOptions extends React.Component{\r\n// //     \tstate = {\r\n// // \t\tgood: 0,\r\n// // \t\tneutral: 0,\r\n// // \t\tbad: 0\r\n// //     };\r\n    \r\n    \r\n// //   feedbackGood = () => {\r\n// //     this.setState(prevState => ({\r\n// //       good: prevState.good + 1\r\n// //     }));\r\n// //     };\r\n// //   feedbackNeutral = () => {\r\n// //     this.setState(prevState => ({\r\n// //       neutral: prevState.neutral + 1\r\n// //     }));\r\n// //     };\r\n// //   feedbackBad = () => {\r\n// //     this.setState(prevState => ({\r\n// //       bad: prevState.bad + 1,\r\n// //     }));\r\n// //     };\r\n// //   render() {\r\n// //        const { good, neutral, bad } = this.state;\r\n// //         return (\r\n// //                 <div className=\"Contols\">\r\n// //                     <button type=\"button\" name={good} className=\"button_Feedback\" onClick={this.feedbackGood}>Good</button>\r\n// //                     <button type=\"button\" name={neutral} className=\"button_Feedback\"onClick={this.feedbackNeutral}>Neutral</button>\r\n// //                     <button type=\"button\"name={bad} className=\"button_Feedback\"onClick={this.feedbackBad}>Bad</button>\r\n\r\n// //                 </div>\r\n     \r\n// //         )\r\n// //     }\r\n\r\n// }","import Statistics from './components/Statistics/Statistics';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport React, { Component } from 'react';\nimport './App.css';\n// import FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\n// import Section from './components/Section/Section';\n\nexport default class App extends Component {\n\tstate = {\n\t\tgood: 0,\n\t\tneutral: 0,\n\t\tbad: 0\n  };\n  \n  feedbackState = (e) => {\n\t\tconst name = e.target.name;\n\t\tthis.setState((prevState) => ({\n\t\t\t[name]: prevState[name] + 1\n\t\t}));\n\t};\n  countTotalFeedback = () => {\n\t\tconst { good, neutral, bad } = this.state;\n    const totalFeedback = good + neutral + bad;\n\t\treturn totalFeedback;\n\t};\n\n\tcountPositiveFeedbackPercentage = () => {\n\t\tconst result = this.countTotalFeedback();\n\t\tconst { good } = this.state;\n\t\tconst percentage = (good * 100) / result;\n\t\treturn Math.round(percentage);\n\t};\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\t\tconst total = this.countTotalFeedback();\n\t\tconst positivePercentage = this.countPositiveFeedbackPercentage();\n\t\tconst objKey = Object.keys(this.state);\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={objKey}\n            feedbackState={this.feedbackState} />\n\t\t\t\t</Section>\n\n        {total === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          </Section>\n        )}\n      </>\n    );\n}\n}\n\n    // {/* <FeedbackOptions\n    //   options={\"\"}\n    //   onLeaveFeedback={\"\"} />\n   \n    // <Section\n    //   // title=\"UPLOAD STATS\" stats={statistica}\n    //   title=\"\"\n    // /> */}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackOptions\":\"FeedbackOptions_feedbackOptions__240qU\",\"button_Feedback\":\"FeedbackOptions_button_Feedback__2q3L4\"};"],"sourceRoot":""}